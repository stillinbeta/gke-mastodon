---
kind: Namespace
apiVersion: v1
metadata:
  name: mastodon
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: mastodon-config
  namespace: mastodon
data:
  SINGLE_USER_MODE: "true"
  LOCAL_DOMAIN: gayhorse.club
  DB_HOST: 127.0.0.1
  RAILS_ENV: production
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: web
  namespace: mastodon
spec:
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: db-proxy-secret
      containers:
      - name: web
        image: tootsuite/mastodon:v2.5.0
        command:
          - bundle
          - exec
          - rails
          - server
          - --port=3000
          - --binding=0.0.0.0
        ports:
        - name: web
          containerPort: 3000
        env:
        - name: REDIS_URL
          value: redis://redis.mastodon.svc.cluster.local:6379
        envFrom:
        - configMapRef:
            name: mastodon-config
        - secretRef:
            name: mastodon-db-creds
        - secretRef:
            name: mastodon-secrets
        - secretRef:
            name: mailgun
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=$(INSTANCE_NAME)=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        env:
        - name: INSTANCE_NAME
          valueFrom:
            configMapKeyRef:
              name: "db-proxy-connection-name"
              key: instance-name
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: streaming
  namespace: mastodon
spec:
  selector:
    matchLabels:
      app: streaming
  template:
    metadata:
      labels:
        app: streaming
    spec:
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: db-proxy-secret
      containers:
      - name: streaming
        image: tootsuite/mastodon:v2.5.0
        command: ["yarn", "start"]
        ports:
        - name: streaming
          containerPort: 4000
        env:
        - name: REDIS_URL
          value: redis://redis.mastodon.svc.cluster.local:6379
        envFrom:
        - configMapRef:
            name: mastodon-config
        - secretRef:
            name: mastodon-db-creds
        - secretRef:
            name: mastodon-secrets
        - secretRef:
            name: mailgun
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=$(INSTANCE_NAME)=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        env:
        - name: INSTANCE_NAME
          valueFrom:
            configMapKeyRef:
              name: "db-proxy-connection-name"
              key: instance-name
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: worker
  namespace: mastodon
spec:
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: db-proxy-secret
      containers:
      - name: worker
        image: tootsuite/mastodon:v2.5.0
        command:
          - bundle
          - exec
          - sidekiq
          - -q default
          - -q mailers
          - -q pull
          - -q push
        env:
        - name: REDIS_URL
          value: redis://redis.mastodon.svc.cluster.local:6379
        envFrom:
        - configMapRef:
            name: mastodon-config
        - secretRef:
            name: mastodon-db-creds
        - secretRef:
            name: mastodon-secrets
        - secretRef:
            name: mailgun
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=$(INSTANCE_NAME)=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        env:
        - name: INSTANCE_NAME
          valueFrom:
            configMapKeyRef:
              name: "db-proxy-connection-name"
              key: instance-name
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: redis
  namespace: mastodon
spec:
  selector:
    matchLabels:
      app: redis
      role: master
  template:
    metadata:
      labels:
        app: redis
        role: master
    spec:
      containers:
      - name: redis
        image: redis:4-alpine3.8
        ports:
        - name: redis
          containerPort: 6379
---
kind: Service
apiVersion: v1
metadata:
  name: redis
  namespace: mastodon
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
    role: master
---
kind: Service
apiVersion: v1
metadata:
  name: web-ingress
  namespace: mastodon
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: web
  type: NodePort
---
kind: Service
apiVersion: v1
metadata:
  name: streaming-ingress
  namespace: mastodon
spec:
  ports:
  - port: 4000
    targetPort: 4000
  selector:
    app: streaming
  type: NodePort
